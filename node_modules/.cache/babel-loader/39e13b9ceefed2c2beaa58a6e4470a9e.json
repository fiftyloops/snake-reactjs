{"ast":null,"code":"var _jsxFileName = \"/Users/ivyg/Desktop/snake-reactjs/src/game.js\";\nimport React from 'react';\nimport Board from './board';\nimport Snake from './snake';\nimport Food from './food';\nimport './game.css';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleKeyPress = event => {\n      // press spacebar to start\n      if (event.key === \" \") {\n        this.setState({\n          running: true\n        });\n      } else if ([\"w\", \"a\", \"s\", \"d\"].includes(event.key)) {\n        this.setState({});\n      }\n    };\n\n    this.typeOf = ([x, y]) => {\n      // \n      const food = this.state.food;\n\n      if (x === food[0] && y === food[1]) {\n        return \"food\";\n      } //\n\n\n      const snake = this.state.snake;\n\n      for (let i = 0; i < snake.length; i++) {\n        if (x === snake[i][0] && y === snake[i][1]) {\n          return \"snake\";\n        }\n      } // else\n\n\n      return \"\";\n    };\n\n    this.state = {\n      running: false,\n      snake: [],\n      dir: null,\n      food: this.redrawFood\n    };\n  }\n\n  componentDidMount() {\n    // event handler for keypress event\n    window.onkeypress = this.handleKeyPress;\n  }\n\n  redrawSnake() {}\n\n  redrawFood() {} //\n\n\n  checkCollision() {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }\n    }, \"Snake\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      typeOf: this.typeOf,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(Food, {\n      coords: this.state.food,\n      avoid: this.state.snake,\n      update: this.redrawFood,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Snake, {\n      coords: this.state.snake,\n      dir: this.state.dir,\n      update: this.redrawSnake,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/ivyg/Desktop/snake-reactjs/src/game.js"],"names":["React","Board","Snake","Food","Game","Component","constructor","props","handleKeyPress","event","key","setState","running","includes","typeOf","x","y","food","state","snake","i","length","dir","redrawFood","componentDidMount","window","onkeypress","redrawSnake","checkCollision","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Board from './board';\nimport Snake from './snake';\nimport Food  from './food';\nimport './game.css';\n\nclass Game extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\trunning: false,\n\n\t\t\tsnake: [],\n\t\t\tdir: null,\n\n\t\t\tfood: this.redrawFood\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\t// event handler for keypress event\n\t\twindow.onkeypress = this.handleKeyPress;\n\t}\n\n\thandleKeyPress = (event) => {\n\t\t// press spacebar to start\n\t\tif (event.key === \" \") {\n\n\t\t\tthis.setState({\n\t\t\t\trunning: true\n\t\t\t});\n\n\t\t} else if ([\"w\", \"a\", \"s\", \"d\"].includes(event.key)) {\n\n\t\t\tthis.setState({\n\t\t\t\t\n\t\t\t});\n\t\t}\n\t}\n\n\t// \n\ttypeOf = ([x, y]) => {\n\t\t// \n\t\tconst food = this.state.food;\n\t\tif (x === food[0] && y === food[1]) {\n\t\t\treturn \"food\";\n\t\t}\n\n\t\t//\n\t\tconst snake = this.state.snake;\n\t\tfor (let i = 0; i < snake.length; i++) {\n\t\t\tif (x === snake[i][0] && y === snake[i][1]) {\n\t\t\t\treturn \"snake\";\n\t\t\t}\n\t\t}\n\n\t\t// else\n\t\treturn \"\";\n\t}\n\n\tredrawSnake() {\n\n\t}\n\n\tredrawFood() {\n\n\t}\n\n\t//\n\tcheckCollision() {\n\t\t\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"game-title\">{\"Snake\"}</div>\n\t\t\t\t<div className=\"game-board\">\n\t\t\t\t\t<Board\n\t\t\t\t\t\ttypeOf={this.typeOf}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<Food\n\t\t\t\t\tcoords={this.state.food}\n\t\t\t\t\tavoid={this.state.snake}\n\t\t\t\t\tupdate={this.redrawFood}\n\t\t\t\t/>\n\t\t\t\t<Snake\n\t\t\t\t\tcoords={this.state.snake}\n\t\t\t\t\tdir={this.state.dir}\n\t\t\t\t\tupdate={this.redrawSnake}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}